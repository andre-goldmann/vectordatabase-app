version: '3.5'

services:
  nginx:
    container_name: nginx-server
    build: ./app
    ports:
      - "80:80"
    env_file:
      - variables.env

  api:
    container_name: api
    build: ./api
    ports:
      - "4081:4081"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/api:/var/lib/api
    env_file:
      - variables.env
    depends_on:
      - "milvusbackend"
      - "sentenceapi"
      - "pineconebackend"

  milvusbackend:
    container_name: milvus-backend
    build: ./milvus
    ports:
      - "5081:5081"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvusbackend:/var/lib/milvusbackend
    env_file:
      - variables.env
    depends_on:
      - "standalone"

  # Security, do we need to secure this?
  # yes we need if we are going to use pinecone/openai here
  #https://testdriven.io/blog/fastapi-jwt-auth/
  #https://dev.to/spaceofmiah/implementing-authorization-in-fastapi-a-step-by-step-guide-for-securing-your-web-applications-3b1l
  #https://github: com/testdrivenio/fastapi-docker-traefik:
  sentenceapi:
    container_name: sentence-api-server
    build: ./sentenceapi
    ports:
      - "6081:6081"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/sentenceapi:/var/lib/sentenceapi
    env_file:
      - variables.env

  pineconebackend:
    container_name: pinecone-backend
    build: ./pinecone
    ports:
      - "7081:7081"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/pineconebackend:/var/lib/pineconebackend
    env_file:
      - variables.env

  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2022-03-17T06-34-49Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.2.8
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"

networks:
  default:
    name: milvus